version: "3.9"
services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: symfony
      POSTGRES_PASSWORD: symfony
      POSTGRES_DB: app
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U symfony"]
      interval: 5s
      timeout: 5s
      retries: 60
    volumes: [ "db_data:/var/lib/postgresql/data" ]

  php-fpm:
    build:
      context: .               # <— BYŁO ./docker/php
      dockerfile: docker/php/Dockerfile
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
    environment:
      APP_ENV: dev
      APP_DEBUG: "1"
      DATABASE_URL: "postgresql://symfony:symfony@db:5432/app?serverVersion=16&charset=utf8"
    volumes:
      - .:/app:cached

  nginx:
    image: nginx:1.27-alpine
    depends_on: [ php-fpm ]
    ports: ["8080:80"]
    volumes:
      - .:/app:cached
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro

####> doctrine/doctrine-bundle ###
#  database:
#    image: postgres:${POSTGRES_VERSION:-16}-alpine
#    environment:
#      POSTGRES_DB: ${POSTGRES_DB:-app}
#      # You should definitely change the password in production
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
#      POSTGRES_USER: ${POSTGRES_USER:-app}
#    healthcheck:
#      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
#      timeout: 5s
#      retries: 5
#      start_period: 60s
#    volumes:
#      - database_data:/var/lib/postgresql/data:rw
#      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#      # - ./docker/db/data:/var/lib/postgresql/data:rw
####< doctrine/doctrine-bundle ###

volumes:
  db_data: {}

####> doctrine/doctrine-bundle ###
#  database_data:
####< doctrine/doctrine-bundle ###
